name: Deploy Application Deployment
on:
  push:
    branches:
      - dev
      - main
      - feature/*
      - hotfix/*
      - release/*
jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    strategy:
    matrix:
    java-version: [ '17' ]  # Specify the Java version

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up OpenJDK ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'  # 'temurin' is the recommended OpenJDK distribution

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Run tests with test profile
        run: mvn test -Dspring.profiles.active=test
      - name: Install dependencies and test
        run: mvn clean install
      - name: Package application
        run: mvn package -DskipTests=true
      - name: Archive the artifact
        uses: actions/upload-artifact@v3
        with:
          name: springboot-app
          path: target/*.jar
  Containerize:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/springboot-app:latest




